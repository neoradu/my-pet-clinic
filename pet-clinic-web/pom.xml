<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>clinicdemo</artifactId>
        <groupId>com.mypetclinic</groupId>
        <version>0.0.2-SNAPSHOT</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>

    <artifactId>pet-clinic-web</artifactId>

    <properties>
        <!-- Web dependencies -->
        <webjars-bootstrap.version>3.3.6</webjars-bootstrap.version>
        <webjars-jquery-ui.version>1.11.4</webjars-jquery-ui.version>
        <webjars-jquery.version>2.2.4</webjars-jquery.version>
        <wro4j.version>1.8.0</wro4j.version>
    </properties>

    <dependencies>
        <dependency>
            <artifactId>pet-clinic-data</artifactId>
            <groupId>com.mypetclinic</groupId>
            <version>0.0.2-SNAPSHOT</version>
        </dependency>
        <!--Spring Boot Starters:
            -Top leve dependencies for popular JAVA libraries
            -Will bring in dependencies for the project and related
             Spring components
             Eg: spring-boot-starter-data-jpa brings in:
                -Hibernate
                -Spring Data JPA an relaeted Spring deps
         -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- webjars -->
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>webjars-locator-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>${webjars-jquery.version}</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery-ui</artifactId>
            <version>${webjars-jquery-ui.version}</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>${webjars-bootstrap.version}</version>
        </dependency>
        <!-- end of webjars -->

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
            	<exclusion><!-- Remove junit 4 that is brought by spring-boot-starter-test  -->
            		<groupId>junit</groupId>
            		<artifactId>junit</artifactId>
            	</exclusion>
           	</exclusions>
        </dependency>
	    <!-- junit 5 -->
	    <dependency>
	      <groupId>org.junit.jupiter</groupId>
	      <artifactId>junit-jupiter-api</artifactId>
	      <scope>test</scope> <!-- this is brought here just for the test -->
	    </dependency>
	    
	    <dependency> 
	       <!-- This is a maven dependency  to work with Junit 5.
	            Needed For the surefire plugin -->
	      <groupId>org.junit.jupiter</groupId>
	      <artifactId>junit-jupiter-engine</artifactId>
	      <scope>test</scope>
    	</dependency>
	    <dependency> <!-- mockito dependency -->
	    	<groupId>org.mockito</groupId>
	    	<artifactId>mockito-junit-jupiter</artifactId>
	    	<scope>test</scope>
	    </dependency>
        <dependency> <!-- Adding project lombok dependency -->
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
		</dependency>
    </dependencies>

    <build>
        <plugins>
        	<plugin>
        	<!-- The Surefire Plugin is used during the test phase of the build lifecycle 
        	     to execute the unit tests of an application.
        	     https://maven.apache.org/surefire-archives/surefire-3.0.0-M2/maven-surefire-plugin/index.html -->
        		<artifactId>maven-surefire-plugin</artifactId>
        		<!-- <version>2.22.2</version> -->
        		<dependencies>
	        		<dependency>
	        			<groupId>org.junit.platform</groupId>
	        			<artifactId>junit-platform-surefire-provider</artifactId>
	        			<version>1.3.2</version>
	        		</dependency>
        		</dependencies>
        	</plugin>
            <plugin>
                <!-- This is generating css file from .less files-->
                <groupId>ro.isdc.wro4j</groupId>
                <artifactId>wro4j-maven-plugin</artifactId>
                <version>${wro4j.version}</version>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <wroManagerFactory>ro.isdc.wro.maven.plugin.manager.factory.ConfigurableWroManagerFactory</wroManagerFactory>
                    <cssDestinationFolder>${project.build.directory}/classes/static/resources/css</cssDestinationFolder>
                    <wroFile>${basedir}/src/main/wro/wro.xml</wroFile>
                    <extraConfigFile>${basedir}/src/main/wro/wro.properties</extraConfigFile>
                    <contextFolder>${basedir}/src/main/less</contextFolder>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.webjars</groupId>
                        <artifactId>bootstrap</artifactId>
                        <version>${webjars-bootstrap.version}</version>
                    </dependency>
                    <dependency>
                        <groupId>org.mockito</groupId>
                        <artifactId>mockito-core</artifactId>
                        <version>2.23.0</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
</project>